<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title></title>
    <link href="/fzd.github.io/2024/05/11/%E4%BF%9D%E5%A7%86%E7%BA%A7%E8%B6%85%E8%AF%A6%E7%BB%86%E6%95%99%E7%A8%8B%EF%BC%9ADolphinScheduler%E5%8D%95%E6%9C%BA(%E6%9C%AC%E5%9C%B0)%E9%83%A8%E7%BD%B2%E5%8F%8A%E8%BD%AF%E4%BB%B6%E8%BF%90%E8%A1%8C%E6%B5%8B%E8%AF%95-%E8%85%BE%E8%AE%AF%E4%BA%91%E5%BC%80%E5%8F%91%E8%80%85%E7%A4%BE%E5%8C%BA-%E8%85%BE%E8%AE%AF%E4%BA%91/"/>
    <url>/fzd.github.io/2024/05/11/%E4%BF%9D%E5%A7%86%E7%BA%A7%E8%B6%85%E8%AF%A6%E7%BB%86%E6%95%99%E7%A8%8B%EF%BC%9ADolphinScheduler%E5%8D%95%E6%9C%BA(%E6%9C%AC%E5%9C%B0)%E9%83%A8%E7%BD%B2%E5%8F%8A%E8%BD%AF%E4%BB%B6%E8%BF%90%E8%A1%8C%E6%B5%8B%E8%AF%95-%E8%85%BE%E8%AE%AF%E4%BA%91%E5%BC%80%E5%8F%91%E8%80%85%E7%A4%BE%E5%8C%BA-%E8%85%BE%E8%AE%AF%E4%BA%91/</url>
    
    <content type="html"><![CDATA[<p><a name="tjCC0"></a></p><h1 id="保姆级超详细教程：DolphinScheduler单机-本地-部署及软件运行测试"><a href="#保姆级超详细教程：DolphinScheduler单机-本地-部署及软件运行测试" class="headerlink" title="保姆级超详细教程：DolphinScheduler单机(本地)部署及软件运行测试"></a>保姆级超详细教程：DolphinScheduler单机(本地)部署及软件运行测试</h1><p><img src="/fzd.github.io/images/1.jpeg" alt="image.jpg"></p><p>大数据真好玩</p><p>关注</p><p>发布于 2021-12-02 10:11:44</p><p>4.2K0</p><p>发布于 2021-12-02 10:11:44</p><p>举报</p><p>文章被收录于专栏：<a href="https://cloud.tencent.com/developer/column/79529">暴走大数据</a><a href="https://cloud.tencent.com/developer/column/79529">暴走大数据</a><br><a name="a1XKD"></a></p><h3 id="DolphinScheduler架构图"><a href="#DolphinScheduler架构图" class="headerlink" title="DolphinScheduler架构图"></a><strong>DolphinScheduler架构图</strong></h3><p><img src="/fzd.github.io/images/2.jpeg" alt="image.jpg"><br><a name="mhNdZ"></a></p><h5 id="目录"><a href="#目录" class="headerlink" title="目录"></a><strong>目录</strong></h5><p>一、补充</p><p>二、部署流程</p><p>1.下载二进制tar.gz包</p><p>2.创建部署用户并赋予目录操作权限</p><p>3.ssh免密配置</p><p>4.<a href="https://cloud.tencent.com/solution/database?from_column=20065&from=20065">数据库</a>初始化</p><p>5.修改运行参数</p><p>6.一键部署</p><p>7.登录系统</p><p>如果你还不够熟悉DolphinScheduler，可以参考：</p><ul><li><a href="https://cloud.tencent.com/developer/tools/blog-entry?target=https://mp.weixin.qq.com/s?__biz=MzI0NjU2NDkzMQ==&mid=2247494139&idx=2&sn=1af1d42dce6fdcd3bbe3382fca653b23&chksm=e9bff8d7dec871c1ddebcc37a72bd6ca41ea908332fae08bc8f57437894d31dc77e9358de532&token=422302214&lang=zh_CN&scene=21%23wechat_redirect&source=article&objectId=1909521">《调度系统Apache DolphinScheduler介绍和设计原理》</a></li><li><a href="https://cloud.tencent.com/developer/tools/blog-entry?target=https://mp.weixin.qq.com/s?__biz=MzI0NjU2NDkzMQ==&mid=2247486115&idx=2&sn=0823d445c5f2e6079de68277a3f6d60a&chksm=e9bc1b8fdecb929933ac403f92414ad1bed8d00145b09b5441b44bf3ea0f788e288b9e2013e8&token=422302214&lang=zh_CN&scene=21%23wechat_redirect&source=article&objectId=1909521">《DolphinScheduler分布式作业管理平台》</a><br><a name="oQyXX"></a></li></ul><h3 id="一、补充"><a href="#一、补充" class="headerlink" title="一、补充"></a><a href="https://cloud.tencent.com/developer/tools/blog-entry?target=http://mp.weixin.qq.com/s?__biz=MzI0NjU2NDkzMQ==&mid=2247494907&idx=1&sn=4923ca218bdbb60f12819592e7fea6f7&chksm=e9bffdd7dec874c1b354060085818929279099287563dd1a8d3b4758e8a24793ef0a5a3444b3&scene=21%23wechat_redirect&source=article&objectId=1909521">一、补充</a></h3><p>安装psmisc：</p><p>代码语言：javascript</p><p>复制</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">apt-get install psmisc<br></code></pre></td></tr></table></figure><p><a name="DbwkW"></a></p><h3 id="二、部署流程"><a href="#二、部署流程" class="headerlink" title="二、部署流程"></a><a href="https://cloud.tencent.com/developer/tools/blog-entry?target=http://mp.weixin.qq.com/s?__biz=MzI0NjU2NDkzMQ==&mid=2247494890&idx=2&sn=788a90a7cfaa4f2698cad0e5445e3608&chksm=e9bffdc6dec874d04d4809c8dae3e67dba1e107a60ea470ca85f7edc3619ff16a1f44b5423ad&scene=21%23wechat_redirect&source=article&objectId=1909521">二、部署流程</a></h3><p><a name="wXgRp"></a></p><h4 id="1-下载二进制tar-gz包"><a href="#1-下载二进制tar-gz包" class="headerlink" title="1.下载二进制tar.gz包"></a><strong>1.下载二进制tar.gz包</strong></h4><p>下载最新版本的后端安装包至<a href="https://cloud.tencent.com/act/pro/promotion-cvm?from_column=20065&from=20065">服务器</a>部署目录，比如创建 &#x2F;opt&#x2F;dolphinscheduler 做为安装部署目录，下载地址：<a href="https://dlcdn.apache.org/dolphinscheduler/1.3.8/apache-dolphinscheduler-1.3.8-src.tar.gz%EF%BC%8C%E4%B8%8B%E8%BD%BD%E5%90%8E%E4%B8%8A%E4%BC%A0">https://dlcdn.apache.org/dolphinscheduler/1.3.8/apache-dolphinscheduler-1.3.8-src.tar.gz，下载后上传</a> tar 包到该目录中</p><p>注：此处应当下载bin文件</p><p><img src="/fzd.github.io/images/3.jpeg" alt="image.jpg"></p><p>解压</p><p>代码语言：javascript</p><p>复制</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs javascript"># 创建部署目录，部署目录请不要创建在 /root、/home 等高权限目录 <br>mkdir -p /opt/dolphinscheduler<br>cd /opt/dolphinscheduler<br><br># 解压缩<br>tar -zxvf apache-dolphinscheduler-<span class="hljs-number">1.3</span><span class="hljs-number">.8</span>-bin.<span class="hljs-property">tar</span>.<span class="hljs-property">gz</span><br> <br>#重命名<br>mv apache-dolphinscheduler-<span class="hljs-number">1.3</span><span class="hljs-number">.8</span>-bin  dolphinscheduler-bin<br></code></pre></td></tr></table></figure><p>笔者在&#x2F;usr&#x2F;local位置上创建dolphinscheduler文件夹，上传并解压了安装包。随后将压缩包重命名为dolphinscheduler-bin。</p><p>代码语言：javascript</p><p>复制</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs javascript">mkdir dolphinscheduler<br>cd dolphinscheduler<br><br># 解压缩<br>tar -zxvf apache-dolphinscheduler-<span class="hljs-number">1.3</span><span class="hljs-number">.8</span>-bin.<span class="hljs-property">tar</span>.<span class="hljs-property">gz</span> -C<br> <br>#重命名<br>mv apache-dolphinscheduler-<span class="hljs-number">1.3</span><span class="hljs-number">.8</span>-bin  dolphinscheduler-bin<br></code></pre></td></tr></table></figure><p>附：</p><p>查看虚拟机ip地址</p><p>代码语言：javascript</p><p>复制</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">ifconfig<br></code></pre></td></tr></table></figure><p>inet后跟的值即为ip地址</p><p>随后用filezilla连接虚拟机，传输文件</p><p><img src="/fzd.github.io/images/4.jpeg" alt="image.jpg"></p><p>主机号即为刚刚查询的结果，协议选择SFTP而不是默认的FTP，用户名为虚拟机系统的用户名而不是linux终端terminal的用户。</p><p>连接成功后即可看到linux文件目录，用拖拽的方式即可传输文件。</p><p>笔者此处遇到权限问题：</p><p>filezilla报错：</p><p>代码语言：javascript</p><p>复制</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript">命令:    put <span class="hljs-string">&quot;C:\Users\86136\Desktop\apache-dolphinscheduler-1.3.8-src.tar.gz&quot;</span> <span class="hljs-string">&quot;apache-dolphinscheduler-1.3.8-src.tar.gz&quot;</span><br>错误: <span class="hljs-regexp">/usr/</span>local/dolphinscheduler/apache-dolphinscheduler-<span class="hljs-number">1.3</span><span class="hljs-number">.8</span>-src.<span class="hljs-property">tar</span>.<span class="hljs-property">gz</span>: open <span class="hljs-keyword">for</span> <span class="hljs-attr">write</span>: permission denied<br>错误:    文件传输失败<br></code></pre></td></tr></table></figure><p>在虚拟机上授权</p><p>代码语言：javascript</p><p>复制</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">sudo chmod <span class="hljs-number">777</span> /usr/local/dolphinscheduler<br></code></pre></td></tr></table></figure><p>重新传输，问题解决。</p><p>实际上，在安装filezilla后直接拖拽文件进虚拟机界面也能实现文件传输，但就笔者而言这一操作偶尔能够成功但常常导致系统死机。<br><a name="sD0OK"></a></p><h4 id="2-创建部署用户并赋予目录操作权限"><a href="#2-创建部署用户并赋予目录操作权限" class="headerlink" title="2.创建部署用户并赋予目录操作权限"></a><a href="https://cloud.tencent.com/developer/tools/blog-entry?target=http://mp.weixin.qq.com/s?__biz=MzI0NjU2NDkzMQ==&mid=2247494890&idx=2&sn=788a90a7cfaa4f2698cad0e5445e3608&chksm=e9bffdc6dec874d04d4809c8dae3e67dba1e107a60ea470ca85f7edc3619ff16a1f44b5423ad&scene=21%23wechat_redirect&source=article&objectId=1909521">2.创建部署用户并赋予目录操作权限</a></h4><ul><li>创建部署用户，并且一定要配置 sudo 免密。以创建 dolphinscheduler 用户为例</li></ul><p>代码语言：javascript</p><p>复制</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs javascript"># 创建用户需使用 root 登录<br>useradd dolphinscheduler<br><br># 添加密码<br>echo <span class="hljs-string">&quot;dolphinscheduler&quot;</span> | passwd --stdin dolphinscheduler<br><br># 配置 sudo 免密<br>sed -i <span class="hljs-string">&#x27;$adolphinscheduler  ALL=(ALL)  NOPASSWD: NOPASSWD: ALL&#x27;</span> /etc/sudoers<br>sed -i <span class="hljs-string">&#x27;s/Defaults    requirett/#Defaults    requirett/g&#x27;</span> /etc/sudoers<br><br># 修改目录权限，使得部署用户对 dolphinscheduler-bin 目录有操作权限<br>chown -R <span class="hljs-attr">dolphinscheduler</span>:dolphinscheduler dolphinscheduler-bin<br></code></pre></td></tr></table></figure><p>注意：</p><ul><li>因为任务执行服务是以 sudo -u {linux-user} 切换不同 linux 用户的方式来实现多租户运行作业，所以部署用户需要有 sudo 权限，而且是免密的。初学习者不理解的话，完全可以暂时忽略这一点</li><li>如果发现 &#x2F;etc&#x2F;sudoers 文件中有 “Defaults requirett” 这行，也请注释掉</li><li>如果用到资源上传的话，还需要给该部署用户分配操作本地文件系统或者 HDFS 或者 MinIO的权限</li></ul><p>坑：</p><p>代码语言：javascript</p><p>复制</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">echo <span class="hljs-string">&quot;dolphinscheduler&quot;</span> | passwd --stdin dolphinscheduler<br></code></pre></td></tr></table></figure><p>这步会报错。linux的passwd命令没有–stdin的语法</p><p>应该用</p><p>代码语言：javascript</p><p>复制</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">echo <span class="hljs-string">&quot;dolphinscheduler:123456&quot;</span> | chpasswd<br></code></pre></td></tr></table></figure><p>修改用户dolphinscheduler密码为123456</p><p>另外这五条指令在第一次成功运行时都没有运行成功提示。<br><a name="rNXB2"></a></p><h4 id="3-ssh免密配置"><a href="#3-ssh免密配置" class="headerlink" title="3.ssh免密配置"></a><a href="https://cloud.tencent.com/developer/tools/blog-entry?target=http://mp.weixin.qq.com/s?__biz=MzI0NjU2NDkzMQ==&mid=2247494755&idx=3&sn=2e407bda03e3a392387a1f276f554927&chksm=e9bffd4fdec8745963dc186d565a7077e1dc7e4d05e3099f105aaec5111ef013a6dfe1779376&scene=21%23wechat_redirect&source=article&objectId=1909521">3.ssh免密配置</a></h4><ul><li>切换到部署用户并配置 ssh 本机免密登录</li></ul><p>代码语言：javascript</p><p>复制</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs javascript">su dolphinscheduler<br><br>ssh-keygen -t rsa -P <span class="hljs-string">&#x27;&#x27;</span> -f ~<span class="hljs-regexp">/.ssh/i</span>d_rsa<br>cat ~<span class="hljs-regexp">/.ssh/i</span>d_rsa.<span class="hljs-property">pub</span> &gt;&gt; ~<span class="hljs-regexp">/.ssh/</span>authorized_keys<br>chmod <span class="hljs-number">600</span> ~<span class="hljs-regexp">/.ssh/</span>authorized_keys<br></code></pre></td></tr></table></figure><p>注意：正常设置后，dolphinscheduler 用户在执行命令 ssh localhost 是不需要再输入密码的</p><p>坑：这里运行会报错Could not create directory ‘&#x2F;home&#x2F;dolphinscheduler&#x2F;.ssh</p><p>需要先以root身份在&#x2F;home下创建dolphinscheduler目录再在dolphinscheduler里创建.ssh目录，</p><p>然后切换回dolphinscheduler用户执行。除此之外可能还需要对这些目录进行授权。<br><a name="XjudP"></a></p><h4 id="4-数据库初始化"><a href="#4-数据库初始化" class="headerlink" title="4.数据库初始化"></a><a href="https://cloud.tencent.com/developer/tools/blog-entry?target=http://mp.weixin.qq.com/s?__biz=MzI0NjU2NDkzMQ==&mid=2247494354&idx=1&sn=50123991ffe4e806bd18dc393e28efb5&chksm=e9bffbfedec872e87451bbacab6e7586452d42b3ae7f0b2789f12437e9dcf37c877867711e11&scene=21%23wechat_redirect&source=article&objectId=1909521">4.数据库初始化</a></h4><ul><li>进入数据库，默认数据库是 <a href="https://cloud.tencent.com/product/postgresql?from_column=20065&from=20065">PostgreSQL</a>，如选择 MySQL 的话，后续需要添加 mysql-connector-java 驱动包到 DolphinScheduler 的 lib 目录下</li></ul><p>mysql-connector-java下载网址：MySQL :: Download Connector&#x2F;J</p><p>注意切换下载linux版并且注意对应版本号。</p><p>这里对应的主要是ubuntu的版本而不是linux版本。</p><p><img src="/fzd.github.io/images/5.jpeg" alt="image.jpg"></p><p>查看ubuntu版本的方法 ：</p><p>代码语言：javascript</p><p>复制</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">cat /proc/version<br></code></pre></td></tr></table></figure><p>结果如下：</p><p><img src="/fzd.github.io/images/6.jpeg" alt="image.jpg"></p><p>笔者用的18.04版本</p><p>下载好后放到DolphinScheduler 的 lib 目录下解压</p><p>但是笔者此处遇到一点问题，下载下来的文件解压后的结果似乎并不太常规，没法简单地tar解包</p><p>解决方法是在windows中解压，然后打开解压出的压缩包，该压缩包里.&#x2F;usr&#x2F;share&#x2F;java里有我们需要的mysql-connector-java-8.0.26.jar，取出来传入linux的lib文件夹下。</p><p>之后执行如下指令进入数据库：</p><p>代码语言：javascript</p><p>复制</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs javascript">#启动mysql服务<br>service mysql start<br><br>#登录<br>mysql -uroot -p<br></code></pre></td></tr></table></figure><ul><li>此处遇到了另一个问题，运行service mysql start报错Failed to start mysql.service: Unit mysql.service not found.</li><li>解决方法：</li></ul><p>代码语言：javascript</p><p>复制</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs javascript">#查询/etc/init.<span class="hljs-property">d</span>/下是否存在mysql，无结果说明不存在<br>ll /etc/init.<span class="hljs-property">d</span>/ | grep mysql<br><br>#查询mysql.<span class="hljs-property">server</span>所在位置<br>find / -name mysql.<span class="hljs-property">server</span><br><br>#把mysql.<span class="hljs-property">server</span>复制过去，其中/usr/local/mysql/是笔者的mysql安装目录<br>cp /usr/local/mysql/support-files/mysql.<span class="hljs-property">server</span> /etc/init.<span class="hljs-property">d</span>/mysql<br></code></pre></td></tr></table></figure><ul><li>进入数据库命令行窗口后，执行数据库初始化命令，设置访问账号和密码。注: {user} 和 {password} 需要替换为具体的数据库用户名和密码</li></ul><p>代码语言：javascript</p><p>复制</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs javascript">mysql&gt; <span class="hljs-variable constant_">CREATE</span> <span class="hljs-variable constant_">DATABASE</span> dolphinscheduler <span class="hljs-variable constant_">DEFAULT</span> <span class="hljs-variable constant_">CHARACTER</span> <span class="hljs-variable constant_">SET</span> utf8 <span class="hljs-variable constant_">DEFAULT</span> <span class="hljs-variable constant_">COLLATE</span> utf8_general_ci;<br>   mysql&gt; <span class="hljs-variable constant_">GRANT</span> <span class="hljs-variable constant_">ALL</span> <span class="hljs-variable constant_">PRIVILEGES</span> <span class="hljs-variable constant_">ON</span> dolphinscheduler.* <span class="hljs-variable constant_">TO</span> <span class="hljs-string">&#x27;&#123;user&#125;&#x27;</span>@<span class="hljs-string">&#x27;%&#x27;</span> <span class="hljs-variable constant_">IDENTIFIED</span> <span class="hljs-variable constant_">BY</span> <span class="hljs-string">&#x27;&#123;password&#125;&#x27;</span>;<br>   mysql&gt; <span class="hljs-variable constant_">GRANT</span> <span class="hljs-variable constant_">ALL</span> <span class="hljs-variable constant_">PRIVILEGES</span> <span class="hljs-variable constant_">ON</span> dolphinscheduler.* <span class="hljs-variable constant_">TO</span> <span class="hljs-string">&#x27;&#123;user&#125;&#x27;</span>@<span class="hljs-string">&#x27;localhost&#x27;</span> <span class="hljs-variable constant_">IDENTIFIED</span> <span class="hljs-variable constant_">BY</span> <span class="hljs-string">&#x27;&#123;password&#125;&#x27;</span>;<br>   mysql&gt; flush privileges;<br></code></pre></td></tr></table></figure><p>注：如果需要查看mysql中的用户及其密码可使用如下代码</p><p>代码语言：javascript</p><p>复制</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-variable constant_">SELECT</span> <span class="hljs-title class_">User</span>, <span class="hljs-title class_">Host</span>, <span class="hljs-title class_">Password</span> <span class="hljs-variable constant_">FROM</span> mysql.<span class="hljs-property">user</span>;<br></code></pre></td></tr></table></figure><p>创建表和导入基础数据</p><p>首先退出sql(按Ctrl+c)</p><p>接下来修改 conf 目录下 datasource.properties 中的下列配置</p><p>代码语言：javascript</p><p>复制</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript">cd /usr/local/dolphinscheduler/dolphinscheduler-bin<br><br>vi conf/datasource.<span class="hljs-property">properties</span><br></code></pre></td></tr></table></figure><ul><li>如果选择 MySQL，请注释(用‘#’)掉 PostgreSQL 相关配置(反之同理)，还需要手动添加 [ mysql-connector-java 驱动 jar ] 包到 lib 目录下，这里下载的是 mysql-connector-java-5.1.47.jar，然后正确配置数据库连接相关信息</li><li>提示：切换至英文输入法，输入i进入修改状态，方向键改变光标位置，完成后先按Esc退出插入状态，再输入:wq保存并退出。:q可用来直接退出而不保存。</li></ul><p>代码语言：javascript</p><p>复制</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs javascript"># postgre<br>  # spring.<span class="hljs-property">datasource</span>.<span class="hljs-property">driver</span>-<span class="hljs-keyword">class</span>-name=org.<span class="hljs-property">postgresql</span>.<span class="hljs-property">Driver</span><br>  # spring.<span class="hljs-property">datasource</span>.<span class="hljs-property">url</span>=<span class="hljs-attr">jdbc</span>:<span class="hljs-attr">postgresql</span>:<span class="hljs-comment">//localhost:5432/dolphinscheduler</span><br>  # mysql<br>  spring.<span class="hljs-property">datasource</span>.<span class="hljs-property">driver</span>-<span class="hljs-keyword">class</span>-name=com.<span class="hljs-property">mysql</span>.<span class="hljs-property">jdbc</span>.<span class="hljs-property">Driver</span><br>  spring.<span class="hljs-property">datasource</span>.<span class="hljs-property">url</span>=<span class="hljs-attr">jdbc</span>:<span class="hljs-attr">mysql</span>:<span class="hljs-comment">//xxx:3306/dolphinscheduler?useUnicode=true&amp;characterEncoding=UTF-8&amp;allowMultiQueries=true     # 需要修改ip，本机localhost即可</span><br>  spring.<span class="hljs-property">datasource</span>.<span class="hljs-property">username</span>=xxx      # 需要修改为上面的&#123;user&#125;值<br>  spring.<span class="hljs-property">datasource</span>.<span class="hljs-property">password</span>=xxx      # 需要修改为上面的&#123;password&#125;值<br></code></pre></td></tr></table></figure><ul><li>先把PostgreSQL 相关的代码注释掉，然后注意修改这里的xxx</li><li>修改并保存完后，执行 script 目录下的创建表及导入基础数据脚本</li></ul><p>代码语言：javascript</p><p>复制</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">sh script/create-dolphinscheduler.<span class="hljs-property">sh</span><br></code></pre></td></tr></table></figure><p>注意: 如果执行上述脚本提示 “&#x2F;bin&#x2F;java: No such file or directory” 错误，请在 &#x2F;etc&#x2F;profile 下配置 JAVA_HOME 及 PATH 变量</p><p>正好笔者此处也遇到了类似的问题：</p><p>script&#x2F;create-dolphinscheduler.sh: 37: script&#x2F;create-dolphinscheduler.sh: &#x2F;bin&#x2F;java: not found</p><p>那么我们就按照提示进入&#x2F;etc文件夹下的profile文件进行编辑吧：</p><p>代码语言：javascript</p><p>复制</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">vi /etc/profile<br></code></pre></td></tr></table></figure><p>在最下方添加如下代码：</p><p>代码语言：javascript</p><p>复制</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-variable constant_">JAVA_HOME</span>=<span class="hljs-regexp">/usr/</span>lib/jvm/java-<span class="hljs-number">8</span>-openjdk-amd64<br><span class="hljs-variable constant_">JRE_HOME</span>=<span class="hljs-regexp">/usr/</span>lib/jvm/java-<span class="hljs-number">8</span>-openjdk-amd64/jre<br><span class="hljs-variable constant_">PATH</span>=<br><br>$$<br><span class="hljs-variable constant_">JAVA_HOME</span>/<span class="hljs-attr">bin</span>:$JRE_HOME/<span class="hljs-attr">bin</span>:<br>$$<br><span class="hljs-variable constant_">PATH</span><br><span class="hljs-variable constant_">CLASSPATH</span>=.:<br><br>$$<br><span class="hljs-variable constant_">JAVA_HOME</span>/lib/dt.<span class="hljs-property">jar</span>:$JAVA_HOME/lib/tools.<span class="hljs-property">jar</span>:<br>$$<br><span class="hljs-variable constant_">JRE_HOME</span>/lib<br><span class="hljs-keyword">export</span> <span class="hljs-variable constant_">JAVA_HOME</span> <span class="hljs-variable constant_">JRE_HOME</span> <span class="hljs-variable constant_">PATH</span> <span class="hljs-variable constant_">CLASSPATH</span><br></code></pre></td></tr></table></figure><blockquote><p>当然此处可能由于每个人jdk所在位置以及版本不同而需要做出适当修改。 如果之前使用的npm安装jdk，那么jdk很有可能被安装在&#x2F;usr&#x2F;lib&#x2F;jvm目录下 而我们所需的java文件地址为：&#x2F;usr&#x2F;lib&#x2F;jvm&#x2F;java-8-openjdk-amd64&#x2F;bin&#x2F;java （此处可能略有不同）</p></blockquote><p>:wq保存退出。</p><p>之后再敲入如下代码：</p><p>代码语言：javascript</p><p>复制</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript">source /etc/profile   <span class="hljs-comment">//使修改立即生效</span><br>echo $JAVA_HOME <span class="hljs-comment">//查看JAVA_HOME的值</span><br>javac -version<br></code></pre></td></tr></table></figure><p>第一条使设置生效，二三条检验配置是否成功。<br><a name="JspqL"></a></p><h4 id="5-修改运行参数"><a href="#5-修改运行参数" class="headerlink" title="5.修改运行参数"></a><strong>5.修改运行参数</strong></h4><ul><li>修改 &#x2F;usr&#x2F;local&#x2F;dolphinscheduler&#x2F;dolphinscheduler-bin&#x2F;conf&#x2F;env 目录下的 dolphinscheduler_env.sh 环境变量(以相关用到的软件都安装在 &#x2F;opt&#x2F;soft 下为例)</li></ul><p>代码语言：javascript</p><p>复制</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">vi /usr/local/dolphinscheduler/dolphinscheduler-bin/conf/env/dolphinscheduler_env.<span class="hljs-property">sh</span><br></code></pre></td></tr></table></figure><p>注释export SPARK_HOME1&#x3D;&#x2F;opt&#x2F;soft&#x2F;spark1这行</p><p>export DATAX_HOME&#x3D;&#x2F;opt&#x2F;soft&#x2F;datax&#x2F;bin&#x2F;datax这行加上.py</p><p>代码语言：javascript</p><p>复制</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">export</span> <span class="hljs-variable constant_">HADOOP_HOME</span>=<span class="hljs-regexp">/opt/</span>soft/hadoop<br><span class="hljs-keyword">export</span> <span class="hljs-variable constant_">HADOOP_CONF_DIR</span>=<span class="hljs-regexp">/opt/</span>soft/hadoop/etc/hadoop<br># <span class="hljs-keyword">export</span> <span class="hljs-variable constant_">SPARK_HOME1</span>=<span class="hljs-regexp">/opt/</span>soft/spark1<br><span class="hljs-keyword">export</span> <span class="hljs-variable constant_">SPARK_HOME2</span>=<span class="hljs-regexp">/opt/</span>soft/spark2<br><span class="hljs-keyword">export</span> <span class="hljs-variable constant_">PYTHON_HOME</span>=<span class="hljs-regexp">/opt/</span>soft/python<br><span class="hljs-keyword">export</span> <span class="hljs-variable constant_">JAVA_HOME</span>=<span class="hljs-regexp">/opt/</span>soft/java<br><span class="hljs-keyword">export</span> <span class="hljs-variable constant_">HIVE_HOME</span>=<span class="hljs-regexp">/opt/</span>soft/hive<br><span class="hljs-keyword">export</span> <span class="hljs-variable constant_">FLINK_HOME</span>=<span class="hljs-regexp">/opt/</span>soft/flink<br><span class="hljs-keyword">export</span> <span class="hljs-variable constant_">DATAX_HOME</span>=<span class="hljs-regexp">/opt/</span>soft/datax/bin/datax.<span class="hljs-property">py</span><br><span class="hljs-keyword">export</span> <span class="hljs-variable constant_">PATH</span>=<br><br>$$<br><span class="hljs-variable constant_">HADOOP_HOME</span>/<span class="hljs-attr">bin</span>:$SPARK_HOME2/<span class="hljs-attr">bin</span>:<span class="hljs-attr">$PYTHON_HOME</span>:$JAVA_HOME/<span class="hljs-attr">bin</span>:$HIVE_HOME/<span class="hljs-attr">bin</span>:$FLINK_HOME/<span class="hljs-attr">bin</span>:<span class="hljs-attr">$DATAX_HOME</span>:<br>$$<br><span class="hljs-variable constant_">PATH</span><br></code></pre></td></tr></table></figure><p>注意: 这一步非常重要，例如 JAVA_HOME 和 PATH 是必须要配置的，没有用到的可以忽略或者注释掉；如果找不到 dolphinscheduler_env.sh，请运行 ls -a</p><ul><li>将 jdk 软链到 &#x2F;usr&#x2F;bin&#x2F;java 下(仍以 JAVA_HOME&#x3D;&#x2F;opt&#x2F;soft&#x2F;java 为例)</li></ul><p>代码语言：javascript</p><p>复制</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">sudo ln -s /opt/soft/java/bin/java /usr/bin/java<br></code></pre></td></tr></table></figure><ul><li>修改一键部署配置文件conf&#x2F;config&#x2F;install_config.conf中的各参数，特别注意以下参数的配置</li></ul><p>代码语言：javascript</p><p>复制</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">vim /usr/local/dolphinscheduler/dolphinscheduler-bin/conf/config/install_config.<span class="hljs-property">conf</span><br></code></pre></td></tr></table></figure><p>代码语言：javascript</p><p>复制</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><code class="hljs javascript"># 这里填 mysql or postgresql<br>dbtype=<span class="hljs-string">&quot;mysql&quot;</span><br><br># 数据库连接地址<br>dbhost=<span class="hljs-string">&quot;localhost:3306&quot;</span><br><br># 数据库名<br>dbname=<span class="hljs-string">&quot;dolphinscheduler&quot;</span><br><br># 数据库用户名，此处需要修改为上面设置的 &#123;user&#125; 具体值<br>username=<span class="hljs-string">&quot;xxx&quot;</span>    <br><br># 数据库密码，如果有特殊字符，请使用 \ 转义，需要修改为上面设置的 &#123;password&#125; 具体值<br>password=<span class="hljs-string">&quot;xxx&quot;</span><br><br># <span class="hljs-title class_">Zookeeper</span>地址，单机本机是 <span class="hljs-attr">localhost</span>:<span class="hljs-number">2181</span>，记得把 <span class="hljs-number">2181</span> 端口带上<br>zkQuorum=<span class="hljs-string">&quot;localhost:2181&quot;</span><br><br># 将 <span class="hljs-variable constant_">DS</span> 安装到哪个目录，如: <span class="hljs-regexp">/opt/</span>soft/dolphinscheduler，不同于现在的目录<br>installPath=<span class="hljs-string">&quot;/opt/soft/dolphinscheduler&quot;</span><br><br># 使用哪个用户部署，使用第 <span class="hljs-number">3</span> 节创建的用户<br>deployUser=<span class="hljs-string">&quot;dolphinscheduler&quot;</span><br><br># 邮件配置，以 qq 邮箱为例<br># 邮件协议<br>mailProtocol=<span class="hljs-string">&quot;SMTP&quot;</span><br><br># 邮件服务地址<br>mailServerHost=<span class="hljs-string">&quot;smtp.qq.com&quot;</span><br><br># 邮件服务端口<br>mailServerPort=<span class="hljs-string">&quot;25&quot;</span><br><br># mailSender 和 mailUser 配置成一样即可<br># 发送者<br>mailSender=<span class="hljs-string">&quot;xxx@qq.com&quot;</span><br><br># 发送用户<br>mailUser=<span class="hljs-string">&quot;xxx@qq.com&quot;</span><br><br># 邮箱密码<br>mailPassword=<span class="hljs-string">&quot;xxx&quot;</span><br><br># <span class="hljs-variable constant_">TLS</span> 协议的邮箱设置为 <span class="hljs-literal">true</span>，否则设置为 <span class="hljs-literal">false</span><br>starttlsEnable=<span class="hljs-string">&quot;true&quot;</span><br><br># 开启 <span class="hljs-variable constant_">SSL</span> 协议的邮箱配置为 <span class="hljs-literal">true</span>，否则为 <span class="hljs-literal">false</span>。注意: starttlsEnable 和 sslEnable 不能同时为 <span class="hljs-literal">true</span><br>sslEnable=<span class="hljs-string">&quot;false&quot;</span><br><br># 邮件服务地址值，参考上面 mailServerHost<br>sslTrust=<span class="hljs-string">&quot;smtp.qq.com&quot;</span><br><br># 业务用到的比如 sql 等资源文件上传到哪里，可以设置：<span class="hljs-variable constant_">HDFS</span>,<span class="hljs-variable constant_">S3</span>,<span class="hljs-variable constant_">NONE</span>，单机如果想使用本地文件系统，请配置为 <span class="hljs-variable constant_">HDFS</span>，因为 <span class="hljs-variable constant_">HDFS</span> 支持本地文件系统；如果不需要资源上传功能请选择 <span class="hljs-variable constant_">NONE</span>。强调一点：使用本地文件系统不需要部署 hadoop<br>resourceStorageType=<span class="hljs-string">&quot;HDFS&quot;</span><br><br># 这里以保存到本地文件系统为例<br># 注：但是如果你想上传到 <span class="hljs-variable constant_">HDFS</span> 的话，<span class="hljs-title class_">NameNode</span> 启用了 <span class="hljs-variable constant_">HA</span>，则需要将 hadoop 的配置文件 core-site.<span class="hljs-property">xml</span> 和 hdfs-site.<span class="hljs-property">xml</span> 放到 conf 目录下，本例即是放到 /opt/dolphinscheduler/conf 下面，并配置 namenode cluster 名称；如果 <span class="hljs-title class_">NameNode</span> 不是 <span class="hljs-variable constant_">HA</span>，则修改为具体的 ip 或者主机名即可<br>defaultFS=<span class="hljs-string">&quot;file:///data/dolphinscheduler&quot;</span>    #<span class="hljs-attr">hdfs</span>:<span class="hljs-comment">//&#123;具体的ip/主机名&#125;:8020</span><br><br># 如果没有使用到 <span class="hljs-title class_">Yarn</span>，保持以下默认值即可；如果 <span class="hljs-title class_">ResourceManager</span> 是 <span class="hljs-variable constant_">HA</span>，则配置为 <span class="hljs-title class_">ResourceManager</span> 节点的主备 ip 或者 hostname，比如 <span class="hljs-string">&quot;192.168.xx.xx,192.168.xx.xx&quot;</span> ;如果是单 <span class="hljs-title class_">ResourceManager</span> 请配置 yarnHaIps=<span class="hljs-string">&quot;&quot;</span> 即可<br># 注：依赖于yarn执行的任务，为了保证执行结果判断成功，需要确保yarn信息配置正确<br>yarnHaIps=<span class="hljs-string">&quot;192.168.xx.xx,192.168.xx.xx&quot;</span><br><br># 如果 <span class="hljs-title class_">ResourceManager</span> 是 <span class="hljs-variable constant_">HA</span> 或者没有使用到 <span class="hljs-title class_">Yarn</span> 保持默认值即可；如果是单 <span class="hljs-title class_">ResourceManager</span>，请配置真实的 <span class="hljs-title class_">ResourceManager</span> 主机名或者 ip<br>singleYarnIp=<span class="hljs-string">&quot;yarnIp1&quot;</span><br><br># 资源上传根路径，支持 <span class="hljs-variable constant_">HDFS</span> 和 <span class="hljs-variable constant_">S3</span>，由于 hdfs 支持本地文件系统，需要确保本地文件夹存在且有读写权限<br>resourceUploadPath=<span class="hljs-string">&quot;/data/dolphinscheduler&quot;</span><br><br># 具备权限创建 resourceUploadPath的用户<br>hdfsRootUser=<span class="hljs-string">&quot;hdfs&quot;</span><br>    <br># 配置 api server port<br>apiServerPort=<span class="hljs-string">&quot;12345&quot;</span><br><br># 在哪些机器上部署 <span class="hljs-variable constant_">DS</span> 服务，本机选 localhost<br>ips=<span class="hljs-string">&quot;localhost&quot;</span><br><br># ssh端口，默认<span class="hljs-number">22</span><br>sshPort=<span class="hljs-string">&quot;22&quot;</span><br><br># master服务部署在哪台机器上<br>masters=<span class="hljs-string">&quot;localhost&quot;</span><br><br># worker服务部署在哪台机器上，并指定此 worker 属于哪一个 worker 组，下面示例的 <span class="hljs-keyword">default</span> 即为组名<br>workers=<span class="hljs-string">&quot;localhost:default&quot;</span><br><br># 报警服务部署在哪台机器上<br>alertServer=<span class="hljs-string">&quot;localhost&quot;</span><br><br># 后端api服务部署在在哪台机器上<br>apiServers=<span class="hljs-string">&quot;localhost&quot;</span><br></code></pre></td></tr></table></figure><p>注：如果打算用到 资源中心 功能，请执行以下命令：</p><p>代码语言：javascript</p><p>复制</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs javascript">sudo mkdir /data/dolphinscheduler<br>sudo chown -R <span class="hljs-attr">dolphinscheduler</span>:dolphinscheduler /data/dolphinscheduler<br></code></pre></td></tr></table></figure><p><a name="G5YFg"></a></p><h4 id="6-一键部署"><a href="#6-一键部署" class="headerlink" title="6.一键部署"></a><strong>6.一键部署</strong></h4><ul><li>切换到部署用户，执行一键部署脚本</li></ul><p>代码语言：javascript</p><p>复制</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">sh install.<span class="hljs-property">sh</span><br></code></pre></td></tr></table></figure><p>注意：第一次部署的话，在运行中第3步 3,stop server 出现 5 次以下信息，此信息可以忽略</p><p>代码语言：javascript</p><p>复制</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-attr">sh</span>: bin/dolphinscheduler-daemon.<span class="hljs-property">sh</span>: <span class="hljs-title class_">No</span> such file or directory<br></code></pre></td></tr></table></figure><ul><li>运行时报错：install.sh: 22: install.sh: source: not found 1.replace file install.sh: 28: install.sh: [[: not found install.sh: 34: [: &#x3D;&#x3D;: unexpected operator 2.create directory 3.scp resources &#x2F;usr&#x2F;local&#x2F;dolphinscheduler&#x2F;dolphinscheduler-bin&#x2F;script&#x2F;scp-hosts.sh: 21: &#x2F;usr&#x2F;local&#x2F;dolphinscheduler&#x2F;dolphinscheduler-bin&#x2F;script&#x2F;scp-hosts.sh: source: not found &#x2F;usr&#x2F;local&#x2F;dolphinscheduler&#x2F;dolphinscheduler-bin&#x2F;script&#x2F;scp-hosts.sh: 24: &#x2F;usr&#x2F;local&#x2F;dolphinscheduler&#x2F;dolphinscheduler-bin&#x2F;script&#x2F;scp-hosts.sh: [[: not found &#x2F;usr&#x2F;local&#x2F;dolphinscheduler&#x2F;dolphinscheduler-bin&#x2F;script&#x2F;scp-hosts.sh: 29: &#x2F;usr&#x2F;local&#x2F;dolphinscheduler&#x2F;dolphinscheduler-bin&#x2F;script&#x2F;scp-hosts.sh: Syntax error: “(“ unexpected scp copy failed to exit</li></ul><p>原因：默认使用dash作为shell，但sh是bash shell的命令。</p><p>解决方案：</p><p>代码语言：javascript</p><p>复制</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript">dpkg-reconfigure dash（需要root权限）<br>在界面中选择no<br>再运行ls -l /bin/sh 后显示/bin/sh -&gt; bash<br></code></pre></td></tr></table></figure><ul><li>再运行sh命令即可</li><li>脚本完成后，会启动以下 5 个服务，使用</li></ul><p>代码语言：javascript</p><p>复制</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">jps<br></code></pre></td></tr></table></figure><p>命令查看服务是否启动( jps 为 JDK 自带)</p><ul><li>如果显示中包含：</li></ul><p>代码语言：javascript</p><p>复制</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-title class_">MasterServer</span>         ----- master服务<br>    <span class="hljs-title class_">WorkerServer</span>         ----- worker服务<br>    <span class="hljs-title class_">LoggerServer</span>         ----- logger服务<br>    <span class="hljs-title class_">ApiApplicationServer</span> ----- api服务<br>    <span class="hljs-title class_">AlertServer</span>          ----- alert服务<br></code></pre></td></tr></table></figure><p>如果以上服务都正常启动，说明自动部署成功</p><p>部署成功后，可以进行日志查看，日志统一存放于 logs 文件夹内</p><p>&#x2F;usr&#x2F;dolphinscheduler&#x2F;logs</p><p>代码语言：javascript</p><p>复制</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript">logs/<br>    ├── dolphinscheduler-alert-server.<span class="hljs-property">log</span><br>    ├── dolphinscheduler-master-server.<span class="hljs-property">log</span><br>    |—— dolphinscheduler-worker-server.<span class="hljs-property">log</span><br>    |—— dolphinscheduler-api-server.<span class="hljs-property">log</span><br>    |—— dolphinscheduler-logger-server.<span class="hljs-property">log</span><br></code></pre></td></tr></table></figure><p><a name="f5mGV"></a></p><h4 id="7-登录系统"><a href="#7-登录系统" class="headerlink" title="7.登录系统"></a><a href="https://cloud.tencent.com/developer/tools/blog-entry?target=http://mp.weixin.qq.com/s?__biz=MzI0NjU2NDkzMQ==&mid=2247494550&idx=1&sn=abdf05ddc46325b37400e66b0a5fa91a&chksm=e9bffabadec873ac8725efe1fda1e5f13fc304bd29c5985df4976266f86e747c47d09447ad88&scene=21%23wechat_redirect&source=article&objectId=1909521">7.登录系统</a></h4><p>访问前端页面地址，接口 ip (自行修改) <a href="http://192.168.xx.xx:12345/dolphinscheduler">http://192.168.xx.xx:12345/dolphinscheduler</a></p><p><img src="/fzd.github.io/images/7.png" alt="image.jpg"></p><p>部署完成，成功进入界面。</p><p>推荐参考文档：</p><p>官网网址：</p><p><a href="https://dolphinscheduler.apache.org/zh-cn/">https://dolphinscheduler.apache.org/zh-cn/</a></p><p>官网使用教程：<a href="https://www.bilibili.com/video/BV1d64y1s7eZ">https://www.bilibili.com/video/BV1d64y1s7eZ</a></p><p>你可以在这里参考原文链接：<a href="https://blog.csdn.net/qq_50740678/article/details/120615253">https://blog.csdn.net/qq_50740678/article/details/120615253</a></p><p>本文参与 <a href="https://cloud.tencent.com/developer/support-plan">腾讯云自媒体分享计划</a>，分享自微信公众号。</p><p>原始发表：2021-11-25，如有侵权请联系 <a href="mailto:cloudcommunity@tencent.com">cloudcommunity@tencent.com</a> 删除</p><p><a href="https://cloud.tencent.com/developer/tag/10178">bash</a></p><p><a href="https://cloud.tencent.com/developer/tag/10316">bash 指令</a></p><p><a href="https://cloud.tencent.com/developer/tag/10164">java</a></p><p><a href="https://cloud.tencent.com/developer/tag/10308">linux</a></p><p><a href="https://cloud.tencent.com/developer/tag/10245">云数据库 SQL Server</a></p><p>本文分享自 大数据真好玩 微信公众号，前往查看</p><p>如有侵权，请联系 <a href="mailto:cloudcommunity@tencent.com">cloudcommunity@tencent.com</a> 删除。</p><p>本文参与 <a href="https://cloud.tencent.com/developer/support-plan">腾讯云自媒体分享计划</a>  ，欢迎热爱写作的你一起参与！</p><p><a href="https://cloud.tencent.com/developer/tag/10178">bash</a></p><p><a href="https://cloud.tencent.com/developer/tag/10316">bash 指令</a></p><p><a href="https://cloud.tencent.com/developer/tag/10164">java</a></p><p><a href="https://cloud.tencent.com/developer/tag/10308">linux</a></p><p><a href="https://cloud.tencent.com/developer/tag/10245">云数据库 SQL Server</a></p><blockquote><p>来自: <a href="https://cloud.tencent.com/developer/article/1909521">保姆级超详细教程：DolphinScheduler单机(本地)部署及软件运行测试-腾讯云开发者社区-腾讯云</a></p></blockquote>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/fzd.github.io/2024/05/11/%E8%B0%81%E7%9A%84%E5%95%8A/"/>
    <url>/fzd.github.io/2024/05/11/%E8%B0%81%E7%9A%84%E5%95%8A/</url>
    
    <content type="html"><![CDATA[<h1 id="pure"><a href="#pure" class="headerlink" title="pure"></a>pure</h1><p>A brand new default theme for [<a href="https://hexo.io/">Hexo</a>].  <a href="http://cofess.github.io/">Preview</a> | <a href="README.md">English documentation</a> | <a href="http://blog.cofess.com/hexo-theme-pure/iconfont/demo_fontclass.html">iconfont</a></p><h2 id="特色"><a href="#特色" class="headerlink" title="特色"></a>特色</h2><ul><li>多语言</li><li>第三方评论框（友言、来必力、gitment、gitalk）</li><li>可展示个人豆瓣书单</li><li>可展示个人github托管项目</li><li>可设置支付宝、微信打赏</li></ul><h2 id="页面展示"><a href="#页面展示" class="headerlink" title="页面展示"></a>页面展示</h2><p><a href="http://cofess.github.io/">首页</a> | <a href="http://cofess.github.io/archives/">归档</a> | <a href="http://cofess.github.io/categories/">分类</a> | <a href="http://cofess.github.io/tags/">标签</a> | <a href="http://cofess.github.io/repository/">项目</a> | <a href="http://cofess.github.io/books/">书单</a> | <a href="http://cofess.github.io/links/">友链</a> | <a href="http://cofess.github.io/about/">关于</a></p><h2 id="配置说明"><a href="#配置说明" class="headerlink" title="配置说明"></a>配置说明</h2><p>在 Hexo 中有两份主要的配置文件，其名称都是 _config.yml。 其中，一份位于站点根目录下，主要包含 Hexo 本身的配置；另一份位于主题目录下，这份配置由主题作者提供，主要用于配置主题相关的选项。为了描述方便，在以下说明中，将前者称为站点配置文件， 后者称为主题配置文件</p><h2 id="安装主题"><a href="#安装主题" class="headerlink" title="安装主题"></a>安装主题</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://github.com/cofess/hexo-theme-pure.git themes/pure<br></code></pre></td></tr></table></figure><h2 id="更新主题"><a href="#更新主题" class="headerlink" title="更新主题"></a>更新主题</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> themes/pure<br>git pull<br></code></pre></td></tr></table></figure><h2 id="启用pure主题"><a href="#启用pure主题" class="headerlink" title="启用pure主题"></a>启用pure主题</h2><p>打开站点配置文件，找到theme字段，将其值更改为 pure</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-symbol">theme:</span> pure<br></code></pre></td></tr></table></figure><p>到此，主题安装完成。然后启动Hexo服务验证主题是否正确启用。</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">hexo s</span><br></code></pre></td></tr></table></figure><h2 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h2><h3 id="hexo-wordcount"><a href="#hexo-wordcount" class="headerlink" title="hexo-wordcount"></a><a href="https://github.com/willin/hexo-wordcount">hexo-wordcount</a></h3><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">npm install hexo-wordcount <span class="hljs-comment">--save</span><br></code></pre></td></tr></table></figure><h3 id="hexo-generator-json-content"><a href="#hexo-generator-json-content" class="headerlink" title="hexo-generator-json-content"></a><a href="https://github.com/alexbruno/hexo-generator-json-content">hexo-generator-json-content</a></h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">npm install hexo-generator-json-<span class="hljs-attribute">content</span> <span class="hljs-attr">--save</span><br></code></pre></td></tr></table></figure><h3 id="hexo-generator-feed"><a href="#hexo-generator-feed" class="headerlink" title="hexo-generator-feed"></a><a href="https://github.com/hexojs/hexo-generator-feed">hexo-generator-feed</a></h3><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">npm install hexo-generator-feed <span class="hljs-comment">--save</span><br></code></pre></td></tr></table></figure><h3 id="hexo-generator-sitemap"><a href="#hexo-generator-sitemap" class="headerlink" title="hexo-generator-sitemap"></a><a href="https://github.com/hexojs/hexo-generator-sitemap">hexo-generator-sitemap</a></h3><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">npm install hexo-generator-sitemap <span class="hljs-comment">--save</span><br></code></pre></td></tr></table></figure><h3 id="hexo-generator-baidu-sitemap"><a href="#hexo-generator-baidu-sitemap" class="headerlink" title="hexo-generator-baidu-sitemap"></a><a href="https://github.com/coneycode/hexo-generator-baidu-sitemap">hexo-generator-baidu-sitemap</a></h3><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">npm <span class="hljs-keyword">install </span>hexo-generator-<span class="hljs-keyword">baidu-sitemap </span>--save<br></code></pre></td></tr></table></figure><h2 id="主题配置"><a href="#主题配置" class="headerlink" title="主题配置"></a>主题配置</h2><h3 id="设置语言"><a href="#设置语言" class="headerlink" title="设置语言"></a>设置语言</h3><p>打开站点配置文件, 将 language 设置成你所需要的语言。建议明确设置你所需要的语言,可选值对应themes\pure\languages目录下语言文件，简体中文配置如下：</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-symbol">language:</span> <span class="hljs-built_in">zh</span>-CN<br></code></pre></td></tr></table></figure><h3 id="主题颜色"><a href="#主题颜色" class="headerlink" title="主题颜色"></a>主题颜色</h3><p>定制了五套颜色，默认白，黑:theme-black，蓝:theme-blue，绿:theme-green，紫:theme-purple</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># config</span><br><span class="hljs-attr">config:</span><br>  <span class="hljs-attr">skin:</span> <span class="hljs-comment"># 主题颜色 theme-black theme-blue theme-green theme-purple</span><br></code></pre></td></tr></table></figure><h3 id="导航菜单"><a href="#导航菜单" class="headerlink" title="导航菜单"></a>导航菜单</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># 导航菜单</span><br><span class="hljs-attr">menu:</span><br>  <span class="hljs-attr">Home:</span> <span class="hljs-string">.</span> <br>  <span class="hljs-attr">Archives:</span> <span class="hljs-string">archives</span> <span class="hljs-comment"># 归档</span><br>  <span class="hljs-attr">Categories:</span> <span class="hljs-string">categories</span> <span class="hljs-comment"># 分类</span><br>  <span class="hljs-attr">Tags:</span> <span class="hljs-string">tags</span> <span class="hljs-comment"># 标签</span><br>  <span class="hljs-attr">Repository:</span> <span class="hljs-string">repository</span> <span class="hljs-comment"># github repositories</span><br>  <span class="hljs-attr">Books:</span> <span class="hljs-string">books</span>     <span class="hljs-comment"># 书单</span><br>  <span class="hljs-attr">Links:</span> <span class="hljs-string">links</span> <span class="hljs-comment"># 友链</span><br>  <span class="hljs-attr">About:</span> <span class="hljs-string">about</span> <span class="hljs-comment"># 关于</span><br><br><span class="hljs-comment"># 导航菜单图标（font awesome）</span><br><span class="hljs-attr">menu_icons:</span><br>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span> <span class="hljs-comment"># 是否启用菜单图标</span><br>  <span class="hljs-attr">home:</span> <span class="hljs-string">icon-home-fill</span><br>  <span class="hljs-attr">archives:</span> <span class="hljs-string">icon-archives-fill</span><br>  <span class="hljs-attr">categories:</span> <span class="hljs-string">icon-folder</span><br>  <span class="hljs-attr">tags:</span> <span class="hljs-string">icon-tags</span><br>  <span class="hljs-attr">repository:</span> <span class="hljs-string">icon-project</span><br>  <span class="hljs-attr">books:</span> <span class="hljs-string">icon-book-fill</span><br>  <span class="hljs-attr">links:</span> <span class="hljs-string">icon-friendship</span><br>  <span class="hljs-attr">about:</span> <span class="hljs-string">icon-cup-fill</span><br></code></pre></td></tr></table></figure><h3 id="设置个人信息"><a href="#设置个人信息" class="headerlink" title="设置个人信息"></a>设置个人信息</h3><figure class="highlight moonscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs moonscript">头像在themes\pure\source\images 目录下替换图片即可，捐献的二维码同理。<br><br>个人信息大部分都在 主题配置文件 中设置<br></code></pre></td></tr></table></figure><h3 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h3><p>主题内置三种站内搜索方式：insight、swiftype、baidu</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># Search</span><br><span class="hljs-attr">search:</span><br>  <span class="hljs-attr">insight:</span> <span class="hljs-literal">true</span> <span class="hljs-comment"># you need to install `hexo-generator-json-content` before using Insight Search</span><br>  <span class="hljs-attr">swiftype:</span> <span class="hljs-comment"># enter swiftype install key here</span><br>  <span class="hljs-attr">baidu:</span> <span class="hljs-literal">false</span> <span class="hljs-comment"># you need to disable other search engines to use Baidu search</span><br></code></pre></td></tr></table></figure><h3 id="分享"><a href="#分享" class="headerlink" title="分享"></a>分享</h3><p>支持<code>weibo,qq,qzone,wechat,tencent,douban,diandian,facebook,twitter,google,linkedin</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># Share</span><br><span class="hljs-comment"># weibo,qq,qzone,wechat,tencent,douban,diandian,facebook,twitter,google,linkedin</span><br><span class="hljs-attr">share:</span><br>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span>  <span class="hljs-comment"># 是否启用分享</span><br>  <span class="hljs-attr">sites:</span> <span class="hljs-string">weibo,qq,wechat,facebook,twitter</span>  <span class="hljs-comment"># PC端显示的分享图标</span><br>  <span class="hljs-attr">mobile_sites:</span> <span class="hljs-string">weibo,qq,qzone</span>  <span class="hljs-comment"># 移动端显示的分享图标</span><br></code></pre></td></tr></table></figure><h3 id="评论"><a href="#评论" class="headerlink" title="评论"></a>评论</h3><p>主题集成了<a href="https://disqus.com/">disqus</a>、<a href="http://www.uyan.cc/">友言</a>、<a href="https://livere.com/">来必力</a>、<a href="https://github.com/imsun/gitment">gitment</a>、<a href="https://github.com/gitalk/gitalk">gitalk</a>评论系统，选择其中一种即可</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># Comment</span><br><span class="hljs-comment"># Gitment</span><br><span class="hljs-comment"># Introduction: https://imsun.net/posts/gitment-introduction/</span><br><span class="hljs-attr">comment:</span><br>  <span class="hljs-attr">type:</span> <span class="hljs-string">livere</span> <span class="hljs-comment"># 启用哪种评论系统</span><br>  <span class="hljs-attr">disqus:</span>  <span class="hljs-comment"># enter disqus shortname here</span><br>  <span class="hljs-attr">youyan:</span> <br>    <span class="hljs-attr">uid:</span> <span class="hljs-string">***</span> <span class="hljs-comment"># enter youyan uid </span><br>  <span class="hljs-attr">livere:</span><br>    <span class="hljs-attr">uid:</span> <span class="hljs-string">***</span> <span class="hljs-comment"># enter livere uid</span><br>  <span class="hljs-attr">gitment:</span><br>    <span class="hljs-attr">githubID:</span> <span class="hljs-string">username</span><br>    <span class="hljs-attr">repo:</span> <span class="hljs-string">username.github.io</span><br>    <span class="hljs-attr">ClientID:</span> <span class="hljs-string">***</span><br>    <span class="hljs-attr">ClientSecret:</span> <span class="hljs-string">***</span><br>    <span class="hljs-attr">lazy:</span> <span class="hljs-literal">false</span><br></code></pre></td></tr></table></figure><h3 id="文章浏览量统计"><a href="#文章浏览量统计" class="headerlink" title="文章浏览量统计"></a>文章浏览量统计</h3><p>主题内置了不蒜子和leancloud来统计文章浏览量，启用其中之一即可，注意leancloud需要到其官网申请APP ID 和APP Key。</p><p>比如，启用不蒜子来统计文章浏览量，在主题配置文件中把busuanzi设置为true即可：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">pv:</span><br>  <span class="hljs-attr">busuanzi:</span><br>    <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span>  <span class="hljs-comment"># 不蒜子统计</span><br></code></pre></td></tr></table></figure><p>如果不需要第三方来统计浏览量，只需将相应设置改为false即可（设置为false后不会加载第三方JS脚本）</p><h3 id="项目"><a href="#项目" class="headerlink" title="项目"></a>项目</h3><p>复制<code>theme/pure/_source/</code> 目录下<code>repository</code>文件夹到<code>blog path/source/</code> 目录下</p><p>新版配置（支持 Github 和 Gitee）：</p><p><em>新版配置将会覆盖旧版的 github 配置！</em></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># Repository Info (This will override &#x27;github&#x27; option)</span><br><span class="hljs-comment"># 项目仓库展示信息（将会覆盖 github 项）</span><br><span class="hljs-attr">repository:</span><br>  <span class="hljs-attr">platform:</span> <span class="hljs-string">github</span> <span class="hljs-comment"># 托管平台（github | gitee）</span><br>  <span class="hljs-attr">username:</span> <span class="hljs-string">***</span> <span class="hljs-comment"># 用户名</span><br></code></pre></td></tr></table></figure><p>旧版配置（仅支持 Github）：</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs dts"><span class="hljs-meta"># Github</span><br><span class="hljs-symbol">github:</span> <br><span class="hljs-symbol">  username:</span> ***  <span class="hljs-meta"># github username</span><br></code></pre></td></tr></table></figure><h3 id="豆瓣书单"><a href="#豆瓣书单" class="headerlink" title="豆瓣书单"></a>豆瓣书单</h3><p>复制<code>theme/pure/_source/</code> 目录下<code>books</code>文件夹到<code>blog path/source/</code> 目录下</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs dts"><span class="hljs-meta"># douban 豆瓣书单</span><br><span class="hljs-symbol">douban:</span><br><span class="hljs-symbol">  user:</span> *** <span class="hljs-meta"># 豆瓣用户名</span><br><span class="hljs-symbol">  start:</span> <span class="hljs-number">0</span> <span class="hljs-meta"># 从哪一条记录开始</span><br><span class="hljs-symbol">  count:</span> <span class="hljs-number">100</span> <span class="hljs-meta"># 获取豆瓣书单数据条数</span><br></code></pre></td></tr></table></figure><h3 id="友情链接"><a href="#友情链接" class="headerlink" title="友情链接"></a>友情链接</h3><p>复制<code>theme/pure/_source/</code> 目录下<code>links</code>文件夹到<code>blog path/source/</code> 目录下</p><p>在 hexo 目录下的 source 文件夹内创建一个名为 _data（禁止改名）的文件夹。</p><p>然后在文件内创建一个名为 links.yml 的文件,在其中添加相关数据即可。</p><p>单个友情链接的格式为：</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs dts"><span class="hljs-symbol">Name:</span><br><span class="hljs-symbol">    link:</span> http:<span class="hljs-comment">//example.com</span><br><span class="hljs-symbol">    avatar:</span> http:<span class="hljs-comment">//example.com/avatar.png</span><br><span class="hljs-symbol">    desc:</span> <span class="hljs-string">&quot;这是一个描述&quot;</span><br></code></pre></td></tr></table></figure><p>添加多个友情链接，我们只需要根据上面的格式重复填写即可。</p><p>. 将 Name 改为友情链接的名字，例如 Cofess。</p><p>. <a href="http://example.com/">http://example.com</a> 为友情链接的地址。</p><p>. <a href="http://example.com/avatar.png">http://example.com/avatar.png</a> 为友情链接的头像。</p><p>. 这是一个描述 为友情链接描述。</p><h3 id="文章索引目录"><a href="#文章索引目录" class="headerlink" title="文章索引目录"></a>文章索引目录</h3><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs subunit">title: 文章标题<br>categories:<br>  - 文章分类<br><span class="hljs-keyword">tags:</span><br>  - 文章标签<br>toc: true # 是否启用内容索引<br></code></pre></td></tr></table></figure><h3 id="sidebar侧边栏"><a href="#sidebar侧边栏" class="headerlink" title="sidebar侧边栏"></a>sidebar侧边栏</h3><p>文章侧边栏默认为开启状态，如果某篇文章不想开启侧边栏，在文章开头配置加入“sidebar: none”即可：</p><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs subunit">title: 文章标题<br>categories:<br>  - 文章分类<br><span class="hljs-keyword">tags:</span><br>  - 文章标签<br>sidebar: none # 是否启用sidebar侧边栏，none：不启用<br></code></pre></td></tr></table></figure><h2 id="博客优化"><a href="#博客优化" class="headerlink" title="博客优化"></a>博客优化</h2><h3 id="hexo-neat"><a href="#hexo-neat" class="headerlink" title="hexo-neat"></a><a href="https://github.com/rozbo/hexo-neat">hexo-neat</a></h3><blockquote><p>auto Minify html、js、css and make it neat</p></blockquote><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">npm install hexo-neat <span class="hljs-comment">--save</span><br></code></pre></td></tr></table></figure><p>在博客配置文件<code>_config.yml</code>中添加</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># hexo-neat</span><br><span class="hljs-attr">neat_enable:</span> <span class="hljs-literal">true</span><br><span class="hljs-attr">neat_html:</span><br>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">exclude:</span>  <br><span class="hljs-attr">neat_css:</span><br>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">exclude:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;*.min.css&#x27;</span><br><span class="hljs-attr">neat_js:</span><br>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">mangle:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">output:</span><br>  <span class="hljs-attr">compress:</span><br>  <span class="hljs-attr">exclude:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;*.min.js&#x27;</span> <br></code></pre></td></tr></table></figure><h3 id="hexo-baidu-url-submit"><a href="#hexo-baidu-url-submit" class="headerlink" title="hexo-baidu-url-submit"></a><a href="https://github.com/huiwang/hexo-baidu-url-submit">hexo-baidu-url-submit</a></h3><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">npm <span class="hljs-keyword">install </span>hexo-<span class="hljs-keyword">baidu-url-submit </span>--save<br></code></pre></td></tr></table></figure><h3 id="hexo-translate-title"><a href="#hexo-translate-title" class="headerlink" title="hexo-translate-title"></a><a href="https://github.com/cometlj/hexo-translate-title">hexo-translate-title</a></h3><blockquote><p>使用Google翻译，百度翻译和有道翻译将Hexo中的汉字标题转成英文标题</p></blockquote><p>安装</p><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs maxima">npm install hexo-<span class="hljs-built_in">translate</span>-<span class="hljs-built_in">title</span> --<span class="hljs-built_in">save</span><br></code></pre></td></tr></table></figure><p>在博客配置文件<code>_config.yml</code>中添加</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">translate_title:</span><br>  <span class="hljs-attr">translate_way:</span> <span class="hljs-string">google</span>    <span class="hljs-comment">#google | baidu | youdao</span><br>  <span class="hljs-attr">youdao_api_key:</span> <span class="hljs-string">XXX</span><br>  <span class="hljs-attr">youdao_keyfrom:</span> <span class="hljs-string">XXX</span><br>  <span class="hljs-attr">is_need_proxy:</span> <span class="hljs-literal">true</span>     <span class="hljs-comment">#true | false</span><br>  <span class="hljs-attr">proxy_url:</span> <span class="hljs-string">http://localhost:8123</span><br></code></pre></td></tr></table></figure><p><strong>注意</strong>：判断是否需要配置google本地代理，因为我在本地是开启时才能访问google翻译的，如果没有被墙，请将<code>_config.yml</code> 下的<code>is_need_proxy: true</code>改为false。如果设置为true,请设置本地代理地址</p><h2 id="数学公式"><a href="#数学公式" class="headerlink" title="数学公式"></a>数学公式</h2><blockquote><p>Hexo默认使用”hexo-renderer-marked”引擎渲染网页，该引擎会把一些特殊的markdown符号转换为相应的html标签</p></blockquote><h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><p>解决方案有很多，可以网上搜下，为了节省大家的时间，这里只提供亲身测试过的方法。</p><p>更换Hexo的markdown渲染引擎，<a href="https://github.com/CHENXCHEN/hexo-renderer-markdown-it-plus">hexo-renderer-markdown-it-plus</a>引擎替换默认的渲染引擎<a href="https://github.com/hexojs/hexo-renderer-marked">hexo-renderer-marked</a>即可。</p><h3 id="安装hexo-renderer-markdown-it-plus插件"><a href="#安装hexo-renderer-markdown-it-plus插件" class="headerlink" title="安装hexo-renderer-markdown-it-plus插件"></a>安装hexo-renderer-markdown-it-plus插件</h3><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs applescript">npm un hexo-renderer-marked <span class="hljs-comment">--save</span><br>npm i hexo-renderer-markdown-<span class="hljs-keyword">it</span>-plus <span class="hljs-comment">--save</span><br></code></pre></td></tr></table></figure><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>安装插件后，如果未正常渲染LaTeX数学公式，在博客配置文件<code>_config.yml</code>中添加</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">markdown_it_plus:</span><br>  <span class="hljs-attr">highlight:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">html:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">xhtmlOut:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">breaks:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">langPrefix:</span><br>  <span class="hljs-attr">linkify:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">typographer:</span><br>  <span class="hljs-attr">quotes:</span> <span class="hljs-string">“”‘’</span><br>  <span class="hljs-attr">plugins:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">plugin:</span><br>        <span class="hljs-attr">name:</span> <span class="hljs-string">markdown-it-katex</span><br>        <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">plugin:</span><br>        <span class="hljs-attr">name:</span> <span class="hljs-string">markdown-it-mark</span><br>        <span class="hljs-attr">enable:</span> <span class="hljs-literal">false</span>  <br></code></pre></td></tr></table></figure><h3 id="文章启用mathjax"><a href="#文章启用mathjax" class="headerlink" title="文章启用mathjax"></a>文章启用mathjax</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">title:</span> <span class="hljs-string">Hello</span> <span class="hljs-string">World</span><br><span class="hljs-attr">mathjax:</span> <span class="hljs-literal">true</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>银行直连收费</title>
    <link href="/fzd.github.io/2024/05/11/%E9%AB%98%E6%A0%A1%E9%93%B6%E8%A1%8C%E7%9B%B4%E8%BF%9E%E6%94%B6%E8%B4%B9%E6%96%87%E6%A1%A3/"/>
    <url>/fzd.github.io/2024/05/11/%E9%AB%98%E6%A0%A1%E9%93%B6%E8%A1%8C%E7%9B%B4%E8%BF%9E%E6%94%B6%E8%B4%B9%E6%96%87%E6%A1%A3/</url>
    
    <content type="html"><![CDATA[<h1 id="1-接口协议说明"><a href="#1-接口协议说明" class="headerlink" title="1.接口协议说明"></a>1.接口协议说明</h1><h2 id="1-1访问协议"><a href="#1-1访问协议" class="headerlink" title="1.1访问协议"></a>1.1访问协议</h2><p>统一技术标准，采用基于HTTP协议的服务方式进行交互，提交方式使用POST。</p><p>传输方式    支持HTTP传输<br>提交方式    POST<br>数据传输格式    提交和返回数据可以为JSON格式（Content-Type: application&#x2F;json）<br>字符编码    统一采用UTF-8字符编码<br>API服务地址    API服务地址规则：<br>http:&#x2F;&#x2F;<ip>:<port>&#x2F;<service>&#x2F;api&#x2F;wysf&#x2F;common </p><h2 id="1-2访问授权"><a href="#1-2访问授权" class="headerlink" title="1.2访问授权"></a>1.2访问授权</h2><p>接口调用方在调用服务之前，必须获取接口服务提供方的访问授权，即appid和签名私钥key（需要平台提供）。</p><h2 id="1-3服务请求方发送请求"><a href="#1-3服务请求方发送请求" class="headerlink" title="1.3服务请求方发送请求"></a>1.3服务请求方发送请求</h2><p>请求头参数内容：<br>其中biz_content为请求业务参数，根据不同的接口构造参数；其余的参数为公用参数。</p><table><thead><tr><th align="center">参数中文名称</th><th align="center">参数名</th><th align="center">类型定义</th><th align="center">必填</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">appid</td><td align="center">合作方ID</td><td align="center">String(18)</td><td align="center">是</td><td align="center">空</td></tr><tr><td align="center">uniqueid</td><td align="center">随机字符串</td><td align="center">String(32)</td><td align="center"></td><td align="center">每次请求生成一个唯一编号，全局唯一（建议采用UUID）。</td></tr><tr><td align="center">method</td><td align="center">接口名称</td><td align="center">String(64)</td><td align="center"></td><td align="center">空</td></tr></tbody></table><h1 id="2-接口列表"><a href="#2-接口列表" class="headerlink" title="2.接口列表"></a>2.接口列表</h1><h2 id="2-1API列表"><a href="#2-1API列表" class="headerlink" title="2.1API列表"></a>2.1API列表</h2><table><thead><tr><th>交易码</th><th>交易名称</th></tr></thead><tbody><tr><td>01</td><td>查询</td></tr><tr><td>02</td><td>扣款</td></tr></tbody></table><h1 id="3-接口说明"><a href="#3-接口说明" class="headerlink" title="3.接口说明"></a>3.接口说明</h1><h2 id="3-1查询"><a href="#3-1查询" class="headerlink" title="3.1查询"></a>3.1查询</h2><h3 id="3-1-1请求业务参数"><a href="#3-1-1请求业务参数" class="headerlink" title="3.1.1请求业务参数"></a>3.1.1请求业务参数</h3><table><thead><tr><th>字段</th><th>描述</th><th>类型</th><th>长度</th><th>必填</th><th>补充</th></tr></thead><tbody><tr><td>MessageType</td><td>消息类型</td><td>String</td><td>2</td><td>是</td><td>01查询</td></tr><tr><td>TransDate</td><td>交易日期</td><td>String</td><td>10</td><td>是</td><td>格式为YYYY-MM-DD</td></tr><tr><td>TransTime</td><td>交易时间</td><td>String</td><td>8</td><td>是</td><td>格式为HH:MM:SS</td></tr><tr><td>StuNo</td><td>学号</td><td>String</td><td>20</td><td>是</td><td></td></tr><tr><td>Sfqj</td><td>收费区间</td><td>String</td><td>13</td><td></td><td>如果收费区间为空则返回所有收费区间所有收费项目的欠费。否则只返回所输入区间的欠费。</td></tr></tbody></table><h3 id="3-1-2返回结果参数"><a href="#3-1-2返回结果参数" class="headerlink" title="3.1.2返回结果参数"></a>3.1.2返回结果参数</h3><table><thead><tr><th>参数</th><th>描述</th><th>类型</th><th>长度</th><th>必填</th><th>补充</th></tr></thead><tbody><tr><td>resultCode</td><td>业务响应代码</td><td>String</td><td>2</td><td>是</td><td>00成功，其他失败</td></tr><tr><td>reslultMsg</td><td>业务响应信息</td><td>String</td><td>255</td><td></td><td></td></tr><tr><td>result</td><td>业务接口的响应值</td><td>String</td><td></td><td>是</td><td>详见 3.1.2.1，采用国密SM4加密算法base64</td></tr><tr><td>time</td><td>业务响应时间</td><td>String</td><td></td><td></td><td></td></tr></tbody></table>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/fzd.github.io/2024/05/11/hello-world/"/>
    <url>/fzd.github.io/2024/05/11/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
