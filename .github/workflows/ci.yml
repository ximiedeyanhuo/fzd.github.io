name: CI # 部署

on: # 触发条件
  push:
    branches:
      - master # 推送到 master 分支（这里的分支名很重要，不要弄错了

  workflow_dispatch: # 手动触发

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: 1. 检出仓库 #  Checkout
        uses: actions/checkout@v2


      - name: 2. 安装 Node # Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18.x" # 使用适合你Hexo项目的Node.js版本

      - name: 3. 安装 Hexo # Install Hexo
        run: |
          npm install hexo-cli -g

      - name: 4. 缓存 Node 插件 # Cache Modules
        uses: actions/cache@v1
        id: cache-modules
        with:
          path: node_modules
          key: ${{runner.OS}}-${{hashFiles('**/package-lock.json')}}

      - name: 5. 安装主题 # Install Theme
        run: |
          git clone -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly
          npm install hexo-renderer-pug hexo-renderer-stylus --save

      - name: 5. 安装依赖 # Install Dependencies  如果没有缓存或 插件有更新，则安装插件
        if: steps.cache-modules.outputs.cache-hit != 'true'
        run: | # **如果仓库里没有 package-lock.json，上传一下，npm ci 必须要有 package-lock.json**
          npm ci

      - name: 6. 生成静态文件 # Generate，其中hexo algolia为algolia搜索，hexo gulp为全站压缩，如果没安装则按需删除
        run: |
          hexo clean
          hexo generate
          hexo algolia
          # gulp
          # export TZ='Asia/Shanghai'

      - name: 7. 部署到 github page # Deploy GitHub Pages：github.io仓库中保存每次提交日志 其中clean-exclude为hexo-seo-autopush插件配置，如果没安装则按需删除
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          token: ${{ secrets.ACCESS_TOKEN }}  # 你的GitHub个人访问令牌
          branch: master
          folder: public
          clean-exclude: |
            public/.github/
          commit-message: "${{ github.event.head_commit.message }} Updated By Github Actions"
